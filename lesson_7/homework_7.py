"""
++++++++++++++++++++++++++++++++++++++++++++++++
Задачи по уроку "Цикл while"
++++++++++++++++++++++++++++++++++++++++++++++++
===============================================
1. Вывод чисел от 1 до N
Запросите у пользователя число N. Используя цикл while, выведите все числа от 1 до N включительно."""
from getpass import win_getpass

# N = int(input('Введи число: '))
# i = 0
# while i < N:
#     i += 1
#     print(i)
"""
===============================================
2. Сумма четных чисел до N
Запросите у пользователя число N. Используя цикл while, вычислите сумму всех четных чисел от 1 до N."""
# N = int(input('Введи число: '))
# i = 0
# summ = 0
# while i < N:
#     i += 1
#     summ += i
# print(summ)
"""
===============================================
3. Подсчет количества цифр в числе
Запросите у пользователя натуральное число. Используя цикл while, определите сколько в нем цифр."""
# N = int(input('Введи число: '))
# counter = 0
# while N != 0:
#     counter += 1
#     N //= 10
# print(counter)
"""
===============================================
4. Определение максимальной цифры в числе
Запросите у пользователя натуральное число. Используя цикл while, найдите наибольшую цифру в числе."""
# N = int(input('Введи число: '))
# N_max = N % 10
# while N != 0:
#     if N % 10 > N_max:
#         N_max = N % 10
#     N //= 10
# print(N_max)
"""
===============================================
5. Запрос пароля
Программа должна запрашивать у пользователя пароль, пока он не введет правильный ("qwerty123").
Как только введен правильный пароль, программа должна вывести "Доступ разрешен"."""
# success_code = 'qwerty123'
# while True:
#     password = input('Введите пароль: ')
#     if password == success_code:
#         print('Доступ разрешен')
#         break
"""
===============================================
++++++++++++++++++++++++++++++++++++++++++++++++
Задачи по уроку "Операторы break, continue и else в цикле while"
++++++++++++++++++++++++++++++++++++++++++++++++
===============================================
1. Поиск первого четного числа
Пусть у нас есть список чисел. Используя цикл while, найдите первое четное число и остановите цикл.
Если четное число найдено, выведите его, иначе – "Четное число не найдено"."""
# list_int = [1, 3, 5, 6, 7, 9]
# i = 0
# while i < len(list_int):
#     if list_int[i] % 2 == 0:
#         print(list_int[i])
#         break
#     i += 1
# else:
#     print('Четное число не найдено')
"""
===============================================
2. Пропуск отрицательных чисел
Запрашивайте у пользователя числа, пока он не введет 0. Суммируйте только положительные числа.
Если число отрицательное, пропускайте его с помощью continue."""
# i = 1
# res = 0
# while i != 0:
#     i = int(input('Введи число '))
#     if i < 0:
#         continue
#     res += i
# print(res)
"""
===============================================
3. Вывод нечетных чисел из диапазона
Запросите у пользователя два числа a и b. Используя while, выведите все нечетные числа в диапазоне [a, b].
Используйте continue, чтобы пропустить четные числа."""
# a, b = int(input('Введи число a ')), int(input('Введи число b '))
# while a <= b:
#     if a % 2 == 0:
#         a += 1
#         continue
#     print(a)
#     a += 1 #без continue можно было бы не дублировать а += 1, а print записать в if a % 2 != 0, но сделал по условию
"""
===============================================
4. Проверка на простое число
Запросите у пользователя число N. Определите, является ли оно простым (делится только на 1 и само себя).
Если нашли делитель, остановите цикл (break).
Если break не сработал, используйте else, чтобы сообщить, что число простое."""
# N = int(input('Введи число: '))
# i = 2
# while i != N:
#     if N % i == 0 or N < 2:
#         break
#     i += 1
# else:
#     print('число простое')
"""
===============================================
5. Поиск максимального числа
Запрашивайте у пользователя числа, пока он не введет 0. Найдите наибольшее введенное число.
Используйте break, если пользователь откажется вводить данные (введет пустую строку)."""
# N = input('Введи число: ')
# if N.isdigit():
#     N = int(N)
#     n_max = N
#     while N != 0:
#         N = input('Введи число: ')
#         if not N.isdigit():
#             break
#         N = int(N)
#         if N > n_max:
#             n_max = N
#     print(n_max)
"""
++++++++++++++++++++++++++++++++++++++++++++++++
Задачи по уроку "Цикл for в Python – основы и применение"
++++++++++++++++++++++++++++++++++++++++++++++++
===============================================
1. Вывести все символы строки в обратном порядке
Запросите у пользователя строку и с помощью for выведите ее символы в обратном порядке.
(Вспомните методы списка)"""
# s = input('Введи строку ')
# for i in s[::-1]:
#     print(i)
"""
===============================================
2.Замена четных элементов списка на 0
Дан список чисел. Используя for и range(), замените все четные элементы списка на 0, оставив нечетные без изменений."""
# s = [1, 2, 3, 4, 5, 6,7]
# for i in range(len(s)):
#     if s[i] % 2 == 0:
#         s[i] = 0
# print(s)
"""
===============================================
3. Генерация списка степеней двойки
Запросите у пользователя число N. Сформируйте список степеней двойки от 2^0 до 2^N включительно."""
# N = int(input('Введи число: '))
# lst = []
# for i in range(N + 1):
#     lst.append(2**i)
# print(lst)

"""
===============================================
4. Вывод всех чисел от A до B с шагом K
Запросите у пользователя A, B и K. Используйте for и range() для вывода всех чисел от A до B включительно с шагом K.
"""
# A, B, K = int(input('Введи число A:')), int(input('Введи число B:')), int(input('Введи число K:'))
# for i in range(A, B+1, K):
#     print(i)
"""
++++++++++++++++++++++++++++++++++++++++++++++++
Задачи на input() и print()
++++++++++++++++++++++++++++++++++++++++++++++++
================================================
1. Простая работа с print()
================================================
Выведи на экран строку "Привет, мир!".
Выведи три числа: 5, 10, 15 через пробел.
Выведи результат сложения 10 + 25."""
from pydoc import resolve

# print('Привет, мир!')
# print(5, 10 ,15)
# print(10 + 25)
"""
================================================
2. Использование параметров sep и end в print()
================================================
Выведи числа 1, 2 и 3 через символ " & ", используя sep.
Напечатай "Python" и "лучший язык" в разных вызовах функции print() так, чтобы они выводились в одной строке, используя параметр end."""
# print(1, 2, 3, sep=' & ')
# print('Python', end = ' ')
# print('лучший язык')
"""
================================================
3. Форматированный вывод с F-строками
================================================
Создай переменные x = 3.14 и y = -8, затем выведи строку: Координаты точки: x = 3.14; y = -8  используя F-строку.
Запроси у пользователя его имя и возраст, затем выведи: Имя: Иван, Возраст: 25  используя F-строку."""
# x = 3.14
# y = -8
# print(f'Координаты точки: x = {x}; y = {y}')
# name = input('Введите имя: ')
# age = input('Введите возраст: ')
# print(f'Имя: {name}, Возраст: {age}')
"""
================================================
4. Работа с input()
================================================
Запроси у пользователя его имя и выведи "Привет, <имя>!"."""
# print(f'Привет, {input('Как тебя зовут? ')}!')
"""
================================================
5. Преобразование типов
================================================
Запроси у пользователя два числа, сложи их и выведи результат.
Запроси у пользователя целое число, выведи его квадрат.
"""
# x = float(input('Число x: '))
# y = float(input('Число y: '))
# print(f'x + y = {x + y}')
# z = float(input('Число z: '))
# print(f'z^2 = {z**2}')
"""
++++++++++++++++++++++++++++++++++++++++++++++++
Булевые значения
++++++++++++++++++++++++++++++++++++++++++++++++
================================================
1. Основы булевой логики
================================================
Выполни следующие сравнения и выведи их результаты:
5 > 3
10 < 2
7 == 7
6 != 8
4 >= 4
9 <= 3
Присвой результат сравнения 8 > 12 переменной res и выведи её значение и тип (type(res))."""
# print(5 >3)
# print(10 < 2)
# print(7 == 7)
# print(6 != 8)
# print(4 >= 4)
# print(9 <= 3)
# res = 8 > 12
# print(type(res))
"""
================================================
2. Проверка четности и кратности числа
================================================
Присвой переменной x значение 15.
Проверь, является ли x четным (x % 2 == 0) и выведи результат.
Проверь, делится ли x на 5 без остатка.
Проверь, делится ли x одновременно на 3 и 5."""
# x = 15
# print(x % 2 == 0)
# print(x % 5 == 0)
# print(x % 3 == 0 and x % 5 ==0)
"""
================================================
3. Работа с логическими операторами (and, or, not)
================================================
Создай переменную y = 4.5.
Проверь, попадает ли y в диапазон [1, 10] (используй and).
Проверь, входит ли y в один из диапозонов [0, 5] или [10, 15] (используй or).
Инвертируй проверку y < 5 с помощью not."""
# y = 4.5
# print(1 <= y and y <= 10)
# print(0 <= y <= 5 or 10 <= y <= 15)
# print(not y < 5)
"""
================================================
4. Приоритет логических операций
================================================
Вычисли и выведи результаты следующих выражений:
True or False and False
not False and True
False or not True and True
not (10 > 5 or 3 < 1)"""
# print(True or False and False)
# print(not False and True)
# print(False or not True and True)
# print(not (10 > 5 or 3 < 1))
"""
================================================
5. Приведение типов к bool
================================================
Определи логическое значение (bool()) для следующих значений и выведи их:
0
-5
3.14
"" (пустая строка)
"Python"
" " (строка с пробелом)
"""
# print(bool(0))
# print(bool(-5))
# print(bool(3.14))
# print(bool(''))
# print(bool('Python'))
# print(bool(' '))
"""
================================================
6. Дополнительное задание
================================================
Присвой переменной n любое число и проверь, является ли оно положительным, четным и делится ли на 3.
"""
# n = int(input('Число: '))
# print(n > 0)
# print(n % 2 == 0)
# print(n % 3 == 0)
"""
++++++++++++++++++++++++++++++++++++++++++++++++
Срезы строк
++++++++++++++++++++++++++++++++++++++++++++++++
================================================
1. Доступ к символам по индексу.
================================================
Создай строку s = "Программирование".
Выведи первый символ строки.
Выведи последний символ строки.
Выведи третий и предпоследний символы строки.
"""
s = 'Программирование'
# print(s[0])
# print(s[-1])
# print(s[3], s[-2])
"""
================================================
2. Обращение к символам с проверкой границ
================================================
Попробуй вывести s[100]. Что произойдет?
Используй len(s), чтобы корректно обратиться к последнему символу."""
# print(s[len(s)-1])
"""
================================================
3. Создание срезов
================================================
Выдели из строки s = "Программирование" первые 6 символов, запиши в переменную и выведи на экран.
Выдели последние 5 символов, запиши в переменную и выведи на экран.
Выдели символы с 3-го по 7-й, запиши в переменную и выведи на экран.
Выведи каждый второй символ строки.
Разверни строку."""
# s1 = s[:5]
# print(s1)
# s2_1 = s[2:7]
# print(s2_1)
# s3 = s[1::2]
# print(s3)
# s4 = s[::-1]
# print(s4)
"""
================================================
4. Работа с шагом в срезах
================================================
Выведи каждый третий символ строки s = "Программирование" начиная с первого.
Выведи строку в обратном порядке через один."""
# print(s[0], s[2::3], sep='')
# print(s[-1::-2])
"""
================================================
5. Проверка неизменяемости строк
================================================
Попробуй выполнить s[0] = "п". Почему возникает ошибка?
Создай новую строку s2, в которой первый символ будет заменен на "П", используя срезы."""
# s[0] = 'п' не работает т.к. строка это не изменяемый тип данных
s2 = 'п'+s[1:]
print(s2)
"""
================================================
6. Дополнительное задание
================================================
Создай строку word = "abcdefgh".
Выдели из нее подстроку "cde" с помощью среза.
Выведи строку, где все символы расположены в обратном порядке.
Выведи строку без первого и последнего символов.
"""
word = 'abcdefgh'
print(word[2:5])
print(word[1:-2])
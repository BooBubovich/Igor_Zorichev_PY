"""
++++++++++++++++++++++++++++++++++++++++++++++++
Множества в Python
++++++++++++++++++++++++++++++++++++++++++++++++
===============================================
1. Создайте множество с элементами .
Добавьте в него число, затем попробуйте добавить уже существующий элемент.
Выведите итоговое множество."""
# set_1 = {1, 'два', 3.3}
# print(set_1)
# set_1.add(4)
# set_1.add('два')
# print(set_1)
"""
===============================================
2. Создайте множество из списка городов:
Выведите его на экран.
Сколько уникальных городов в этом списке?"""
# set_2 = {'Москва', 'Подольск', 'Троицк', 'Троицк', 'Москва'}
# print(set_2)
# print(len(set_2))
"""
===============================================
3. Создайте множество с числами от 1 до 10.
Удалите из него:
Число 5 (если оно есть).
Число 15 (используйте метод, который не вызовет ошибку).
Выведите итоговое множество."""
# set_3 = set(range(1, 11))
# set_3.discard(5)
# set_3.discard(15)
# print(set_3)
"""
===============================================
4. Преобразуйте строку "abrakadabra" в множество символов.
Выведите итоговое множество и определите, сколько различных букв в слове."""
# set_4 = set('abrakadabra')
# print(set_4)
# print(len(set_4))
"""
===============================================
5. Создайте пустое множество и попробуйте добавить в него следующие элементы:
Число 10
Строку "hello"
Кортеж (1, 2, 3)
Список [4, 5, 6]
Какие из элементов нельзя добавить в множество? Почему?"""
# set_5 = set()
# set_5.add(10)
# set_5.add('hello')
# set_5.add((1, 2, 3))
# #set_5.add([4, 5, 6]) #список - изменяемый тип данных, нельзя добавить
# print(set_5)
"""
===============================================
6. Создайте 2 множества, в которых совпадают 2 элемента
Найдите:
Пересечение A и B.
Объединение A и B.
Разность A - B.
Разность B - A.
Симметричную разность A ^ B."""
# set_61 = {1, 2, 3, 4}
# set_62 = {3, 4, 5, 6}
# print(set_61 & set_62)
# print(set_61 | set_62)
# print(set_61 - set_62)
# print(set_62 - set_61)
# print(set_61 ^ set_62)
"""
===============================================
7. Создайте два множества из чисел 1 до 10:
even_numbers — содержит четные числа.
odd_numbers — содержит нечетные числа.
Проверьте:
Какое будет пересечение &?
Какое будет объединение |?
"""
# even_numbers = set(x for x in range(1,11) if x % 2 == 0)
# odd_numbers = set(x for x in range(1,11) if x % 2 != 0)
# print(even_numbers & odd_numbers)
# print(even_numbers | odd_numbers)
"""
===============================================
8. Даны множества студентов, записавшихся на курсы:
python_students = {"Анна", "Иван", "Мария", "Сергей"}
java_students = {"Иван", "Дмитрий", "Сергей", "Алексей"}
Определите:
Кто записан на оба курса?
Кто записан только на один курс?
Кто записан хотя бы на один курс?"""
# python_students = {"Анна", "Иван", "Мария", "Сергей"}
# java_students = {"Иван", "Дмитрий", "Сергей", "Алексей"}
# print(f'Ходят на оба курса: {python_students & java_students}')
# print(f'Только один курс: {python_students ^ java_students}')
# print(f'Хотя бы один курс: {python_students | java_students}')
"""
===============================================
9. Даны множества слов:
text1 = set("программирование")
text2 = set("автоматизация")
Найдите общие буквы в двух словах.
Найдите буквы, которые есть только в первом слове.
Найдите уникальные буквы каждого слова.
"""
# text1 = set("программирование")
# text2 = set("автоматизация")
# print(text1 & text2)
# print(text1 - text2)
# print(text1)
# print(text2)
"""
++++++++++++++++++++++++++++++++++++++++++++++++
Генераторы множеств и словарей
++++++++++++++++++++++++++++++++++++++++++++++++
1. Создайте множество из квадратов чисел от 1 до 10, но только для четных чисел.
"""
# set_1 = set(x ** 2 for x in range(1,11) if x % 2 == 0)
# print(set_1)
"""
2. Дан список:
words = ["apple", "banana", "cherry", "apple", "banana", "date", "cherry"]
Создайте множество уникальных слов, преобразовав их в верхний регистр.
"""
# words = ["apple", "banana", "cherry", "apple", "banana", "date", "cherry"]
# set_2 = set(i.upper() for i in words)
# print(set_2)
"""
3. Дан словарь:

grades = {"Alice": 85, "Bob": 78, "Charlie": 92, "David": 60, "Eve": 88}
Используя генератор, создайте новый словарь, где:
Если оценка больше или равна 80, записать "отлично".
Если меньше 80, записать "удовлетворительно".
"""
# grades = {"Alice": 85, "Bob": 78, "Charlie": 92, "David": 60, "Eve": 88}
# word_grades = {key: 'отлично' if value >= 80 else 'удовлетворительно' for key, value in grades.items()}
# print(word_grades)

"""
4. Дано множество слов:

text = {"Python", "automation", "programming", "testing"}
Создайте новый словарь, где ключи – это слова из множества, а значения – длина каждого слова."""
# text = {"Python", "automation", "programming", "testing"}
# d = {key: len(key) for key in text}
# print(d)
"""

5. Создайте вложенный словарь, где ключи – числа от 1 до n (для примера пусть n = 10), а значения – множества квадратов чисел от 1 до ключа.
Пример для n = 3:

{
1: {1},
2: {1, 4},
3: {1, 4, 9}
}
"""
d = {x:set(y ** 2 for y in range(1, x + 1)) for x in range (1, int(input('Введи число: ')) + 1)}
print(d)